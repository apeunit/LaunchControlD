{
    "swagger": "2.0",
    "info": {
        "description": "This are the documentation for the LaunchControlD REST API",
        "title": "LaunchControlD REST API",
        "contact": {
            "name": "API Support",
            "email": "u2467@apeunit.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "host": "api.launch-control.eventivize.co",
    "basePath": "/api",
    "paths": {
        "/status": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Healthcheck and version endpoint",
                "responses": {
                    "200": {
                        "description": "API Status",
                        "schema": {
                            "$ref": "#/definitions/server.APIStatus"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login to the API",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "-",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.UserCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API Reply",
                        "schema": {
                            "$ref": "#/definitions/server.APIReply"
                        }
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout from the system",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register an API account",
                "parameters": [
                    {
                        "description": "Registration credentials",
                        "name": "-",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.UserCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/events": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Retrieve a list of events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Event"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Create an event",
                "parameters": [
                    {
                        "description": "Event Request",
                        "name": "-",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Retrieve an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Destroy an event and associated resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    }
                }
            }
        },
        "/v1/events/{id}/deploy": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Provision the insfrastructure and deploy the event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Event"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Account": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "config_location": {
                    "$ref": "#/definitions/model.ConfigLocation"
                },
                "faucet": {
                    "type": "boolean"
                },
                "genesis_balance": {
                    "type": "string"
                },
                "mnemonic": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "validator": {
                    "type": "boolean"
                }
            }
        },
        "model.ConfigLocation": {
            "type": "object",
            "properties": {
                "CLIConfigDir": {
                    "type": "string"
                },
                "DaemonConfigDir": {
                    "type": "string"
                }
            }
        },
        "model.Event": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Account"
                    }
                },
                "created_on": {
                    "type": "string"
                },
                "ends_on": {
                    "type": "string"
                },
                "owner": {
                    "description": "email address of the owner",
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/model.PayloadLocation"
                },
                "provider": {
                    "description": "provider for provisioning",
                    "type": "string"
                },
                "starts_on": {
                    "type": "string"
                },
                "state": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.MachineConfig"
                    }
                },
                "token_symbol": {
                    "description": "token symbool",
                    "type": "string"
                }
            }
        },
        "model.EventRequest": {
            "type": "object",
            "properties": {
                "genesis_accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GenesisAccount"
                    }
                },
                "owner": {
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/model.PayloadLocation"
                },
                "provider": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                }
            }
        },
        "model.GenesisAccount": {
            "type": "object",
            "properties": {
                "faucet": {
                    "type": "boolean"
                },
                "genesis_balance": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "validator": {
                    "type": "boolean"
                }
            }
        },
        "model.MachineConfig": {
            "type": "object",
            "properties": {
                "DriverName": {
                    "type": "string"
                },
                "EventID": {
                    "type": "string"
                },
                "Instance": {
                    "$ref": "#/definitions/model.MachineConfigInstance"
                },
                "N": {
                    "type": "string"
                },
                "TendermintNodeID": {
                    "type": "string"
                }
            }
        },
        "model.MachineConfigInstance": {
            "type": "object",
            "properties": {
                "IPAddress": {
                    "type": "string"
                },
                "MachineName": {
                    "type": "string"
                },
                "SSHKeyPath": {
                    "type": "string"
                },
                "SSHPort": {
                    "type": "integer"
                },
                "SSHUser": {
                    "type": "string"
                },
                "StorePath": {
                    "type": "string"
                }
            }
        },
        "model.PayloadLocation": {
            "type": "object",
            "properties": {
                "binary_path": {
                    "type": "string"
                },
                "binary_url": {
                    "type": "string"
                },
                "cli_path": {
                    "type": "string"
                },
                "daemon_path": {
                    "type": "string"
                },
                "docker_image": {
                    "type": "string"
                }
            }
        },
        "server.APIReply": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "server.APIStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "uptime": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "server.UserCredentials": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "pass": {
                    "type": "string"
                }
            }
        }
    }
}